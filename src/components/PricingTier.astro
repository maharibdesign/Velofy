---
interface Props {
    name: string;
    price: number;
    features: string[];
    isPopular?: boolean;
}
const { name, price, features, isPopular = false } = Astro.props;
---
<div class={`card p-8 relative border-2 ${isPopular ? 'border-primary' : 'border-transparent'}`}>
    {isPopular && (
        <div class="absolute top-0 right-8 -translate-y-1/2 bg-primary text-white text-xs font-bold px-3 py-1 rounded-full">
            Most Popular
        </div>
    )}
    <h3 class="text-2xl font-bold text-center mb-2">{name}</h3>
    <p class="text-center text-gray-500 dark:text-gray-400 mb-6">Starting From</p>
    <p class="text-5xl font-extrabold text-center mb-8">${price}<span class="text-lg font-medium text-gray-500">/mo</span></p>
    <ul class="space-y-4 mb-8">
        {features?.map(feature => (
            <li class="flex items-start">
                <svg class="w-5 h-5 text-green-500 mr-3 flex-shrink-0 mt-1" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>
                <span>{feature}</span>
            </li>
        ))}
    </ul>
    <a href="/request" class={`btn w-full text-center ${!isPopular && 'btn-secondary'}`}>
        Choose Plan
    </a>
</div>