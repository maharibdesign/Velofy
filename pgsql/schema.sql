-- Create the table for projects/case studies
CREATE TABLE projects (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  image_url TEXT,
  tech_stack TEXT[],
  results TEXT
);

-- Create the table for pricing tiers
CREATE TABLE tiers (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  name TEXT NOT NULL,
  price NUMERIC NOT NULL,
  features TEXT[],
  is_popular BOOLEAN DEFAULT false,
  sort_order INT DEFAULT 0
);

-- Create the table for announcements
CREATE TABLE announcements (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  content TEXT NOT NULL,
  is_active BOOLEAN DEFAULT true
);

-- Create the table for service requests
CREATE TABLE requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  full_name TEXT,
  telegram_handle TEXT,
  business_type TEXT,
  budget TEXT,
  message TEXT
);

-- Create the table for newsletter subscribers
CREATE TABLE emails (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  email TEXT NOT NULL UNIQUE
);

-- Enable Row Level Security (RLS) for all tables
ALTER TABLE projects ENABLE ROW LEVEL SECURITY;
ALTER TABLE tiers ENABLE ROW LEVEL SECURITY;
ALTER TABLE announcements ENABLE ROW LEVEL SECURITY;
ALTER TABLE requests ENABLE ROW LEVEL SECURITY;
ALTER TABLE emails ENABLE ROW LEVEL SECURITY;

-- Create policies for public access (read-only)
CREATE POLICY "Public can read projects" ON projects FOR SELECT USING (true);
CREATE POLICY "Public can read tiers" ON tiers FOR SELECT USING (true);
CREATE POLICY "Public can read active announcements" ON announcements FOR SELECT USING (is_active = true);

-- Create policies for public write access (for forms)
CREATE POLICY "Public can create requests" ON requests FOR INSERT WITH CHECK (true);
CREATE POLICY "Public can create email subscriptions" ON emails FOR INSERT WITH CHECK (true);

-- Create policies for admin access (full control for authenticated users)
CREATE POLICY "Admins can manage projects" ON projects FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Admins can manage tiers" ON tiers FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Admins can manage announcements" ON announcements FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Admins can read requests" ON requests FOR SELECT USING (auth.role() = 'authenticated');
CREATE POLICY "Admins can read emails" ON emails FOR SELECT USING (auth.role() = 'authenticated');